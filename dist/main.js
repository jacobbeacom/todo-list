(()=>{"use strict";class t{constructor(t,e,n=!1){this.name=t,this.dueDate=e,this.completed=n}setName(t){this.name=t}setDate(t){this.dueDate=t}setCompletedStatus(t){this.completed=t}getName(){return this.name}getDate(){return this.dueDate}getCompletedStatus(){return this.completed}}const e=function(e,n,o){const c=new t(e,n,o);return console.log(c),c},n=function(){const t=[],n=[],o=[],c=[];if(0===localStorage.length){const t=a("New Project",o);n.push(t)}else if(localStorage.length>0){const o=Object.keys(localStorage);let s=o.length;for(;s--;)t.push(JSON.parse(localStorage.getItem(o[s])));for(let o=0;o<t.length;o+=1){for(let n=0;n<t[o].toDoList.length;n+=1){const s=t[o].toDoList[n],d=e(s.name,s.dueDate,s.completed);c.push(d)}const s=a(t[o].name,c);n.push(s)}}return n},o=function(){const t=document.getElementById("projectList"),e=n();t.innerHTML="";for(let n=0;n<e.length;n++){const o=document.createElement("button");o.classList.add("projectListItem"),o.textContent=`${e[n].name}`,o.setAttribute("id",`${e[n].name}`),o.addEventListener("click",(t=>{if(t.target.classList.contains("active"));else{const e=document.getElementsByClassName("projectListItem");for(let t=0;t<e.length;t++)e[t].classList.remove("active");t.target.classList.add("active")}})),t.appendChild(o)}},c=function(t){const e=String(t.name);localStorage.setItem(e,JSON.stringify(t))};class s{constructor(t,e){this.name=t,this.toDoList=e}changeName(t){this.name=t}addToDo(t){const n=e(t,"1/1/2022",!1);this.toDoList.push(n)}removeToDo(t){const e=this.toDoList.indexOf(t);this.toDoList.splice(e,1)}}function d(){const t=document.getElementById("sidebar"),e=document.getElementById("newProjectForm");t.removeChild(e)}function a(t,e){const n=new s(t,e);return c(n),n}const i=function(t,e){e.toDoList.splice(t,1)},l=function t(){const e=function(){let t=0;const e=document.getElementsByClassName("projectListItem");for(let n=0;n<e.length;n+=1)t=e[n].classList.contains("active")?n:0;return t}(),o=document.getElementById("body"),s=n();o.innerHTML="";const d=document.createElement("p");d.textContent=`${s[e].name}`,d.classList.add("projectTitle");const a=document.createElement("div");a.classList.add("projectTasksArea");const l=s[e].toDoList;if(l.length>0)for(let n=0;n<l.length;n+=1){const o=document.createElement("div");o.classList.add("task");const d=document.createElement("p");d.textContent=l[n].getName();const r=document.createElement("p");r.textContent=l[n].getDate();const m=document.createElement("div"),u=document.createElement("input");u.setAttribute("type","checkbox"),u.setAttribute("id",`${d.textContent} Completed`);const p=document.createElement("label");p.setAttribute("for",`${d.textContent} Completed`),p.textContent="Completed",m.appendChild(u),m.appendChild(p);const h=document.createElement("button");h.textContent="X",h.addEventListener("click",(()=>{i(n,s[e]),c(s[e]),t()})),o.appendChild(d),o.appendChild(r),o.appendChild(m),o.appendChild(h),a.appendChild(o)}const r=document.createElement("button");return r.classList.add("task"),r.setAttribute("id","newTaskButton"),r.textContent="Add New Task",r.addEventListener("click",(()=>{const n=s[e];n.addToDo("New Task"),c(n),t()})),a.appendChild(r),o.appendChild(d),o.appendChild(a),o};!function(){const t=document.getElementById("content");t.appendChild(function(){const t=document.createElement("header");t.classList.add("header");const e=document.createElement("h1");return e.textContent="To.Do",e.classList.add("appTitle"),t.appendChild(e),t}()),t.appendChild(function(){const t=document.createElement("div");t.classList.add("sidebar"),t.setAttribute("id","sidebar");const e=document.createElement("div");e.classList.add("projectList"),e.setAttribute("id","projectList");const n=document.createElement("button");return n.classList.add("addProject"),n.textContent="Add Project",n.addEventListener("click",(()=>{t.appendChild(function(){const t=document.createElement("div");t.classList.add("newProjectForm"),t.setAttribute("id","newProjectForm");const e=document.createElement("input");e.classList.add("newProjectName");const n=document.createElement("div");n.classList.add("newProjectButtons");const c=document.createElement("button");c.classList.add("newProjectSubmit"),c.textContent="Submit",c.addEventListener("click",(()=>{a(e.value),d(),o()}));const s=document.createElement("button");return s.classList.add("newProjectCancel"),s.textContent="Cancel",s.addEventListener("click",(()=>{d()})),n.appendChild(c),n.appendChild(s),t.appendChild(e),t.appendChild(n),t}())})),t.appendChild(e),t.appendChild(n),t}()),o(),t.appendChild(function(){const t=document.createElement("main");return t.setAttribute("id","body"),t.classList.add("main"),t}()),t.appendChild(function(){const t=document.createElement("footer");t.classList.add("footer");const e=document.createElement("a");return e.textContent="Â©Jacob Beacom 2021",e.setAttribute("href","https://github.com/jacobbeacom"),t.appendChild(e),t}()),l()}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,